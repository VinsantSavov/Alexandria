@using Alexandria.Web.ViewModels.Genres
@model GenresAllBooksViewModel

<div class="container">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-8">
            <a class="text-dark" asp-controller="Genres" asp-action="Details" asp-route-id="@Model.Id">
                <h4 class="font-weight-bold text-capitalize text-left mb-3">@Model.Name</h4>
            </a>
            <h5 class="font-weight-bold text-capitalize text-left">@ViewData["Subtitle"]</h5><hr />
            <section class="recent-book-sec mt-4 mb-3">
                <div class="row">
                    @foreach (var book in Model.AllBooks)
                    {
                        <div class="item mt-3 mb-3 ml-2 mr-2" data-container="body" data-toggle="popover" data-trigger="hover" data-placement="right" data-html="true"
                             data-content="<dl><dt>Title:</dt><dd>@book.Title</dd><dt>Author:</dt><dd>@book.Author</dd><dt>Tags:</dt><dd>@string.Join(", ", book.Tags)</dd></dl>">
                            <div style="width: 150px;">
                                <a asp-controller="Books" asp-action="Details" asp-route-id="@book.Id">
                                    <img src="@book.PictureURL" alt="img">
                                </a>
                            </div>
                        </div>
                    }
                </div>
                <nav>
                    <ul class="pagination">

                        @if (Model.CurrentPage == 1)
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#">Previous</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link"
                                   asp-controller="Genres"
                                   asp-action="NewReleases"
                                   asp-route-page="@(Model.CurrentPage - 1)"
                                   asp-route-id="@Model.Id">Previous</a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.PagesCount; i++)
                        {
                            var active = i == Model.CurrentPage ? "active" : string.Empty;

                            <li class="page-item @active">
                                <a class="page-link"
                                   asp-controller="Genres"
                                   asp-action="NewReleases"
                                   asp-route-page="@i"
                                   asp-route-id="@Model.Id">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage == Model.PagesCount)
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#">Next</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link"
                                   asp-controller="Genres"
                                   asp-action="NewReleases"
                                   asp-route-page="@(Model.CurrentPage + 1)"
                                   asp-route-id="@Model.Id">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            </section>
        </div>
        <div class="col-md-3">
            <h6>Related Genres</h6><hr />
            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's printer took a galley of type and Scrambled it to make a type and typesetting industry. Lorem Ipsum has been the book. </p>
        </div>
    </div>
</div>